<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:cache="http://www.springframework.org/schema/cache"
	xsi:schemaLocation="
        http://www.springframework.org/schema/util
        http://www.springframework.org/schema/util/spring-util-3.1.xsd
        http://www.springframework.org/schema/beans 
        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context-3.1.xsd
        http://www.springframework.org/schema/mvc
       	http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
       	http://www.springframework.org/schema/cache
		http://www.springframework.org/schema/cache/spring-cache-3.1.xsd"
       >


	<!-- 开启controller注解支持 -->
	<!-- 注：如果base-package=com.avicit 则注解事务不起作用 TODO 读源码 -->
	<context:component-scan base-package="com.sofans.controller,com.sofans.spring.conver">
		<context:include-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>

	<mvc:interceptors>
		<bean class="com.sofans.spring.intercepter.SqlInjectIntercepter" />
	</mvc:interceptors>


	<mvc:resources mapping="/**" location="/" />

	<mvc:view-controller path="/" view-name="forward:/index" />
	<!-- 当在web.xml 中 DispatcherServlet使用 <url-pattern>/</url-pattern> 映射时，能映射静态资源 -->

	<!-- 文件上传 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="100000000" />
		<property name="defaultEncoding" value="UTF-8" />
	</bean>

	<mvc:annotation-driven>
		<mvc:message-converters>
			<bean id="mappingJacksonHttpMessageConverter" 
				class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
				<property name="objectMapper" ref="customJSONDateMapper"></property>
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>

	<mvc:annotation-driven>
    <mvc:message-converters>
				<bean class="org.springframework.http.converter.ByteArrayHttpMessageConverter" />
				<bean class="org.springframework.http.converter.StringHttpMessageConverter" />
				<bean class="org.springframework.http.converter.ResourceHttpMessageConverter" />
				<bean class="org.springframework.http.converter.FormHttpMessageConverter" />
<!--				<bean class="com.google.protobuf.spring.http.ProtobufHttpMessageConverter" /> -->
				<bean class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
					<property name="supportedMediaTypes" value="application/json" />
					<property name="objectMapper" ref="customJSONDateMapper"></property>
				</bean>
	 </mvc:message-converters>
</mvc:annotation-driven>


	<bean
		class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping" />

	<!-- Default ViewResolver -->
	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView" />
		<property name="prefix" value="/" />
		<property name="suffix" value=".jsp"></property>
	</bean>

	<!-- 控制器异常处理 -->
	<bean id="exceptionResolver"
		class="com.sofans.exception.CustomSimpleMappingExceptionResolver">
		<property name="exceptionMappings">
			<props>
				<prop key="java.lang.Exception">
					error
				</prop>
			</props>
		</property>
	</bean>


<!-- Cache Manager -->
	<cache:annotation-driven cache-manager="cacheManager"/>
	<bean id="cacheManager" class="org.springframework.cache.support.CompositeCacheManager" p:fallbackToNoOpCache="true">
		<property name="cacheManagers">
			<list>
				<ref bean="simpleCacheManager" />
				<ref bean="ehCacheManager" />
			</list>
		</property>
	</bean>	
	
	<bean id="simpleCacheManager" class="org.springframework.cache.support.SimpleCacheManager">
		<property name="caches">
			<set>
				<bean class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean" p:name="default" />
			</set>
			
		</property>
	</bean>

	<bean id="ehCacheManager" class="org.springframework.cache.ehcache.EhCacheCacheManager" 
		p:cacheManager-ref="ehcache" >
	</bean>
	<bean id="ehcache" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean" p:configLocation="classpath:ehcache.xml"/>
<!-- Cache Manager -->


<!-- 
request interceptor.
	<bean id="handlerMapping" class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping" p:order="-1" >
		<property name="interceptors">
			<list>
				<bean class="com.accela.av360.framework.security.CsrfInterceptor"></bean>  the Interceptor should extends HandlerInterceptorAdapter.
			</list>
		</property>		
	</bean>
 -->

</beans>