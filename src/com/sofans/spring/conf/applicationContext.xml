<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
  xmlns:context="http://www.springframework.org/schema/context"
  xmlns:util="http://www.springframework.org/schema/util"
  xmlns:tx="http://www.springframework.org/schema/tx"
  xmlns:aop="http://www.springframework.org/schema/aop"
  xsi:schemaLocation="
        http://www.springframework.org/schema/util
        http://www.springframework.org/schema/util/spring-util-3.1.xsd
        http://www.springframework.org/schema/beans 
        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context-3.1.xsd
        http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
        ">

<context:component-scan base-package="com.sofans.dao,com.sofans.service"/>


 <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
     <property name="driverClassName" value="com.mysql.jdbc.Driver"></property>
     <property name="url" value="jdbc:mysql://127.0.0.1:3306/ssop?useUnicode=true&amp;characterEncoding=UTF-8"></property>
     <property name="username" value="root"></property>
     <property name="password" value="123456"></property>
     <property name="initialSize">
		<value>5</value>
	 </property>
	 <property name="maxActive">
		<value>10</value>
	 </property>
	 <property name="maxIdle">
		<value>5</value>
	 </property>
	 <property name="minIdle">
		<value>2</value>
	 </property>
		<property name="maxWait">
	 <value>3000</value>
		</property>
	 <property name="removeAbandoned">
		<value>true</value>
	 </property>
	 <property name="removeAbandonedTimeout">
		<value>180</value>
	 </property>
		                
	 <property name="testOnBorrow">
		<value>true</value>
	 </property>
	 <property name="testOnReturn">
		<value>true</value>
	 </property>
	 <property name="testWhileIdle">
		<value>true</value>
	 </property>
	 <property name="validationQuery">
		<value>select 1</value>
	 </property>
   </bean>

	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<property name="packagesToScan" value="com.sofans.entity" />
		<property name="hibernateProperties"> 
             <props>
                <prop key="hibernate.dialect">
                    org.hibernate.dialect.MySQLDialect
                </prop>
                <prop key="hibernate.show_sql">true</prop>
            </props>
         </property>
	</bean>
  
	<bean id="txManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

    <!-- 可以注入实体类 
    <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/> 
    advice
    -->
	<tx:advice id="txAdvice" transaction-manager="txManager" >
		<tx:attributes>
			<tx:method name="exists" read-only="true" />
			<tx:method name="save*" propagation="REQUIRED" />
			<tx:method name="add*" propagation="REQUIRED" />
			<tx:method name="create*" propagation="REQUIRED" />
			<tx:method name="insert*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="merge*" propagation="REQUIRED" />
			<tx:method name="del*" propagation="REQUIRED" />
			<tx:method name="remove*" propagation="REQUIRED" />
			<tx:method name="put*" propagation="REQUIRED" />
			<tx:method name="use*" propagation="REQUIRED" />
			<!-- hibernate4必须配置为开启事务 否则 getCurrentSession()获取不到 -->
			<tx:method name="get*" propagation="REQUIRED" />
			<tx:method name="count*" propagation="REQUIRED" read-only="true" />
			<tx:method name="find*" propagation="REQUIRED" read-only="true" />
			<tx:method name="list*" propagation="REQUIRED" read-only="true" />
			<tx:method name="*" propagation="REQUIRED" />
		</tx:attributes>
	</tx:advice>

	<aop:config expose-proxy="true">
		<!-- 只对业务逻辑层实施事务 -->
		<aop:pointcut id="txPointcut"
			expression="execution(* com.sofans..service..*.*(..))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="txPointcut" />
	</aop:config>
  
  
  <!--  spring2.x后   
    目标对象 
    <bean id="userServImpl" class="com.tarena.biz.impl.UserServImpl"/>  
    通知 
    <bean id="logAdvice" class="com.tarena.advice.LogAdvice"/>  
      
    <aop:config>  
        <aop:aspect id="logAspect" ref="logAdvice">  
           切入点 
            <aop:pointcut id="beforePointCut"   
        expression="execution(* saveUser*(..))"/>  
        <aop:pointcut id="afterPointCut"   
        expression="execution(* saveUser*(..))"/>  
              
            织入(通知作用于切入点)  
            <aop:before method="beforeLog" pointcut-ref="beforePointCut"/>  
            <aop:after method="afterLog" pointcut-ref="afterPointCut"/>  
        </aop:aspect>  
    </aop:config>   -->
  
  
  </beans>